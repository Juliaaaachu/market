{"ast":null,"code":"/*!\n * Module dependencies.\n */\n'use strict';\n\nconst MongooseBuffer = require('../types/buffer');\n\nconst SchemaBufferOptions = require('../options/SchemaBufferOptions');\n\nconst SchemaType = require('../schematype');\n\nconst handleBitwiseOperator = require('./operators/bitwise');\n\nconst utils = require('../utils');\n\nconst populateModelSymbol = require('../helpers/symbols').populateModelSymbol;\n\nconst Binary = MongooseBuffer.Binary;\nconst CastError = SchemaType.CastError;\nlet Document;\n/**\n * Buffer SchemaType constructor\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaBuffer(key, options) {\n  SchemaType.call(this, key, options, 'Buffer');\n}\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\n\n\nSchemaBuffer.schemaName = 'Buffer';\nSchemaBuffer.defaultOptions = {};\n/*!\n * Inherits from SchemaType.\n */\n\nSchemaBuffer.prototype = Object.create(SchemaType.prototype);\nSchemaBuffer.prototype.constructor = SchemaBuffer;\nSchemaBuffer.prototype.OptionsConstructor = SchemaBufferOptions;\n/*!\n * ignore\n */\n\nSchemaBuffer._checkRequired = v => !!(v && v.length);\n/**\n * Sets a default option for all Buffer instances.\n *\n * ####Example:\n *\n *     // Make all buffers have `required` of true by default.\n *     mongoose.Schema.Buffer.set('required', true);\n *\n *     const User = mongoose.model('User', new Schema({ test: Buffer }));\n *     new User({ }).validateSync().errors.test.message; // Path `test` is required.\n *\n * @param {String} option - The option you'd like to set the value for\n * @param {*} value - value for option\n * @return {undefined}\n * @function set\n * @static\n * @api public\n */\n\n\nSchemaBuffer.set = SchemaType.set;\n/**\n * Override the function the required validator uses to check whether a string\n * passes the `required` check.\n *\n * ####Example:\n *\n *     // Allow empty strings to pass `required` check\n *     mongoose.Schema.Types.String.checkRequired(v => v != null);\n *\n *     const M = mongoose.model({ buf: { type: Buffer, required: true } });\n *     new M({ buf: Buffer.from('') }).validateSync(); // validation passes!\n *\n * @param {Function} fn\n * @return {Function}\n * @function checkRequired\n * @static\n * @api public\n */\n\nSchemaBuffer.checkRequired = SchemaType.checkRequired;\n/**\n * Check if the given value satisfies a required validator. To satisfy a\n * required validator, a buffer must not be null or undefined and have\n * non-zero length.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nSchemaBuffer.prototype.checkRequired = function (value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return !!value;\n  }\n\n  return this.constructor._checkRequired(value);\n};\n/**\n * Casts contents\n *\n * @param {Object} value\n * @param {Document} doc document that triggers the casting\n * @param {Boolean} init\n * @api private\n */\n\n\nSchemaBuffer.prototype.cast = function (value, doc, init) {\n  let ret;\n\n  if (SchemaType._isRef(this, value, doc, init)) {\n    // wait! we may need to cast this to a document\n    if (value === null || value === undefined) {\n      return value;\n    } // lazy load\n\n\n    Document || (Document = require('./../document'));\n\n    if (value instanceof Document) {\n      value.$__.wasPopulated = true;\n      return value;\n    } // setting a populated path\n\n\n    if (Buffer.isBuffer(value)) {\n      return value;\n    } else if (!utils.isObject(value)) {\n      throw new CastError('Buffer', value, this.path, null, this);\n    } // Handle the case where user directly sets a populated\n    // path to a plain object; cast to the Model used in\n    // the population query.\n\n\n    const path = doc.$__fullPath(this.path);\n    const owner = doc.ownerDocument ? doc.ownerDocument() : doc;\n    const pop = owner.populated(path, true);\n    ret = new pop.options[populateModelSymbol](value);\n    ret.$__.wasPopulated = true;\n    return ret;\n  } // documents\n\n\n  if (value && value._id) {\n    value = value._id;\n  }\n\n  if (value && value.isMongooseBuffer) {\n    return value;\n  }\n\n  if (Buffer.isBuffer(value)) {\n    if (!value || !value.isMongooseBuffer) {\n      value = new MongooseBuffer(value, [this.path, doc]);\n\n      if (this.options.subtype != null) {\n        value._subtype = this.options.subtype;\n      }\n    }\n\n    return value;\n  }\n\n  if (value instanceof Binary) {\n    ret = new MongooseBuffer(value.value(true), [this.path, doc]);\n\n    if (typeof value.sub_type !== 'number') {\n      throw new CastError('Buffer', value, this.path, null, this);\n    }\n\n    ret._subtype = value.sub_type;\n    return ret;\n  }\n\n  if (value === null) {\n    return value;\n  }\n\n  const type = typeof value;\n\n  if (type === 'string' || type === 'number' || Array.isArray(value) || type === 'object' && value.type === 'Buffer' && Array.isArray(value.data) // gh-6863\n  ) {\n    if (type === 'number') {\n      value = [value];\n    }\n\n    ret = new MongooseBuffer(value, [this.path, doc]);\n\n    if (this.options.subtype != null) {\n      ret._subtype = this.options.subtype;\n    }\n\n    return ret;\n  }\n\n  throw new CastError('Buffer', value, this.path, null, this);\n};\n/**\n * Sets the default [subtype](https://studio3t.com/whats-new/best-practices-uuid-mongodb/)\n * for this buffer. You can find a [list of allowed subtypes here](http://api.mongodb.com/python/current/api/bson/binary.html).\n *\n * ####Example:\n *\n *     const s = new Schema({ uuid: { type: Buffer, subtype: 4 });\n *     const M = db.model('M', s);\n *     const m = new M({ uuid: 'test string' });\n *     m.uuid._subtype; // 4\n *\n * @param {Number} subtype the default subtype\n * @return {SchemaType} this\n * @api public\n */\n\n\nSchemaBuffer.prototype.subtype = function (subtype) {\n  this.options.subtype = subtype;\n  return this;\n};\n/*!\n * ignore\n */\n\n\nfunction handleSingle(val) {\n  return this.castForQuery(val);\n}\n\nSchemaBuffer.prototype.$conditionalHandlers = utils.options(SchemaType.prototype.$conditionalHandlers, {\n  $bitsAllClear: handleBitwiseOperator,\n  $bitsAnyClear: handleBitwiseOperator,\n  $bitsAllSet: handleBitwiseOperator,\n  $bitsAnySet: handleBitwiseOperator,\n  $gt: handleSingle,\n  $gte: handleSingle,\n  $lt: handleSingle,\n  $lte: handleSingle\n});\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [value]\n * @api private\n */\n\nSchemaBuffer.prototype.castForQuery = function ($conditional, val) {\n  let handler;\n\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional + ' with Buffer.');\n    }\n\n    return handler.call(this, val);\n  }\n\n  val = $conditional;\n\n  const casted = this._castForQuery(val);\n\n  return casted ? casted.toObject({\n    transform: false,\n    virtuals: false\n  }) : casted;\n};\n/*!\n * Module exports.\n */\n\n\nmodule.exports = SchemaBuffer;","map":{"version":3,"names":["MongooseBuffer","require","SchemaBufferOptions","SchemaType","handleBitwiseOperator","utils","populateModelSymbol","Binary","CastError","Document","SchemaBuffer","key","options","call","schemaName","defaultOptions","prototype","Object","create","constructor","OptionsConstructor","_checkRequired","v","length","set","checkRequired","value","doc","_isRef","cast","init","ret","undefined","$__","wasPopulated","Buffer","isBuffer","isObject","path","$__fullPath","owner","ownerDocument","pop","populated","_id","isMongooseBuffer","subtype","_subtype","sub_type","type","Array","isArray","data","handleSingle","val","castForQuery","$conditionalHandlers","$bitsAllClear","$bitsAnyClear","$bitsAllSet","$bitsAnySet","$gt","$gte","$lt","$lte","$conditional","handler","arguments","Error","casted","_castForQuery","toObject","transform","virtuals","module","exports"],"sources":["/Users/juliachu/Dropbox/CS/market/node_modules/mongoose/lib/schema/buffer.js"],"sourcesContent":["/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseBuffer = require('../types/buffer');\nconst SchemaBufferOptions = require('../options/SchemaBufferOptions');\nconst SchemaType = require('../schematype');\nconst handleBitwiseOperator = require('./operators/bitwise');\nconst utils = require('../utils');\n\nconst populateModelSymbol = require('../helpers/symbols').populateModelSymbol;\n\nconst Binary = MongooseBuffer.Binary;\nconst CastError = SchemaType.CastError;\nlet Document;\n\n/**\n * Buffer SchemaType constructor\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaBuffer(key, options) {\n  SchemaType.call(this, key, options, 'Buffer');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nSchemaBuffer.schemaName = 'Buffer';\n\nSchemaBuffer.defaultOptions = {};\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaBuffer.prototype = Object.create(SchemaType.prototype);\nSchemaBuffer.prototype.constructor = SchemaBuffer;\nSchemaBuffer.prototype.OptionsConstructor = SchemaBufferOptions;\n\n/*!\n * ignore\n */\n\nSchemaBuffer._checkRequired = v => !!(v && v.length);\n\n/**\n * Sets a default option for all Buffer instances.\n *\n * ####Example:\n *\n *     // Make all buffers have `required` of true by default.\n *     mongoose.Schema.Buffer.set('required', true);\n *\n *     const User = mongoose.model('User', new Schema({ test: Buffer }));\n *     new User({ }).validateSync().errors.test.message; // Path `test` is required.\n *\n * @param {String} option - The option you'd like to set the value for\n * @param {*} value - value for option\n * @return {undefined}\n * @function set\n * @static\n * @api public\n */\n\nSchemaBuffer.set = SchemaType.set;\n\n/**\n * Override the function the required validator uses to check whether a string\n * passes the `required` check.\n *\n * ####Example:\n *\n *     // Allow empty strings to pass `required` check\n *     mongoose.Schema.Types.String.checkRequired(v => v != null);\n *\n *     const M = mongoose.model({ buf: { type: Buffer, required: true } });\n *     new M({ buf: Buffer.from('') }).validateSync(); // validation passes!\n *\n * @param {Function} fn\n * @return {Function}\n * @function checkRequired\n * @static\n * @api public\n */\n\nSchemaBuffer.checkRequired = SchemaType.checkRequired;\n\n/**\n * Check if the given value satisfies a required validator. To satisfy a\n * required validator, a buffer must not be null or undefined and have\n * non-zero length.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nSchemaBuffer.prototype.checkRequired = function(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return !!value;\n  }\n  return this.constructor._checkRequired(value);\n};\n\n/**\n * Casts contents\n *\n * @param {Object} value\n * @param {Document} doc document that triggers the casting\n * @param {Boolean} init\n * @api private\n */\n\nSchemaBuffer.prototype.cast = function(value, doc, init) {\n  let ret;\n  if (SchemaType._isRef(this, value, doc, init)) {\n    // wait! we may need to cast this to a document\n\n    if (value === null || value === undefined) {\n      return value;\n    }\n\n    // lazy load\n    Document || (Document = require('./../document'));\n\n    if (value instanceof Document) {\n      value.$__.wasPopulated = true;\n      return value;\n    }\n\n    // setting a populated path\n    if (Buffer.isBuffer(value)) {\n      return value;\n    } else if (!utils.isObject(value)) {\n      throw new CastError('Buffer', value, this.path, null, this);\n    }\n\n    // Handle the case where user directly sets a populated\n    // path to a plain object; cast to the Model used in\n    // the population query.\n    const path = doc.$__fullPath(this.path);\n    const owner = doc.ownerDocument ? doc.ownerDocument() : doc;\n    const pop = owner.populated(path, true);\n    ret = new pop.options[populateModelSymbol](value);\n    ret.$__.wasPopulated = true;\n    return ret;\n  }\n\n  // documents\n  if (value && value._id) {\n    value = value._id;\n  }\n\n  if (value && value.isMongooseBuffer) {\n    return value;\n  }\n\n  if (Buffer.isBuffer(value)) {\n    if (!value || !value.isMongooseBuffer) {\n      value = new MongooseBuffer(value, [this.path, doc]);\n      if (this.options.subtype != null) {\n        value._subtype = this.options.subtype;\n      }\n    }\n    return value;\n  }\n\n  if (value instanceof Binary) {\n    ret = new MongooseBuffer(value.value(true), [this.path, doc]);\n    if (typeof value.sub_type !== 'number') {\n      throw new CastError('Buffer', value, this.path, null, this);\n    }\n    ret._subtype = value.sub_type;\n    return ret;\n  }\n\n  if (value === null) {\n    return value;\n  }\n\n\n  const type = typeof value;\n  if (\n    type === 'string' || type === 'number' || Array.isArray(value) ||\n    (type === 'object' && value.type === 'Buffer' && Array.isArray(value.data)) // gh-6863\n  ) {\n    if (type === 'number') {\n      value = [value];\n    }\n    ret = new MongooseBuffer(value, [this.path, doc]);\n    if (this.options.subtype != null) {\n      ret._subtype = this.options.subtype;\n    }\n    return ret;\n  }\n\n  throw new CastError('Buffer', value, this.path, null, this);\n};\n\n/**\n * Sets the default [subtype](https://studio3t.com/whats-new/best-practices-uuid-mongodb/)\n * for this buffer. You can find a [list of allowed subtypes here](http://api.mongodb.com/python/current/api/bson/binary.html).\n *\n * ####Example:\n *\n *     const s = new Schema({ uuid: { type: Buffer, subtype: 4 });\n *     const M = db.model('M', s);\n *     const m = new M({ uuid: 'test string' });\n *     m.uuid._subtype; // 4\n *\n * @param {Number} subtype the default subtype\n * @return {SchemaType} this\n * @api public\n */\n\nSchemaBuffer.prototype.subtype = function(subtype) {\n  this.options.subtype = subtype;\n  return this;\n};\n\n/*!\n * ignore\n */\nfunction handleSingle(val) {\n  return this.castForQuery(val);\n}\n\nSchemaBuffer.prototype.$conditionalHandlers =\n    utils.options(SchemaType.prototype.$conditionalHandlers, {\n      $bitsAllClear: handleBitwiseOperator,\n      $bitsAnyClear: handleBitwiseOperator,\n      $bitsAllSet: handleBitwiseOperator,\n      $bitsAnySet: handleBitwiseOperator,\n      $gt: handleSingle,\n      $gte: handleSingle,\n      $lt: handleSingle,\n      $lte: handleSingle\n    });\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [value]\n * @api private\n */\n\nSchemaBuffer.prototype.castForQuery = function($conditional, val) {\n  let handler;\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional + ' with Buffer.');\n    }\n    return handler.call(this, val);\n  }\n  val = $conditional;\n  const casted = this._castForQuery(val);\n  return casted ? casted.toObject({ transform: false, virtuals: false }) : casted;\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaBuffer;\n"],"mappings":"AAAA;AACA;AACA;AAEA;;AAEA,MAAMA,cAAc,GAAGC,OAAO,CAAC,iBAAD,CAA9B;;AACA,MAAMC,mBAAmB,GAAGD,OAAO,CAAC,gCAAD,CAAnC;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,eAAD,CAA1B;;AACA,MAAMG,qBAAqB,GAAGH,OAAO,CAAC,qBAAD,CAArC;;AACA,MAAMI,KAAK,GAAGJ,OAAO,CAAC,UAAD,CAArB;;AAEA,MAAMK,mBAAmB,GAAGL,OAAO,CAAC,oBAAD,CAAP,CAA8BK,mBAA1D;;AAEA,MAAMC,MAAM,GAAGP,cAAc,CAACO,MAA9B;AACA,MAAMC,SAAS,GAAGL,UAAU,CAACK,SAA7B;AACA,IAAIC,QAAJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,OAA3B,EAAoC;EAClCT,UAAU,CAACU,IAAX,CAAgB,IAAhB,EAAsBF,GAAtB,EAA2BC,OAA3B,EAAoC,QAApC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACAF,YAAY,CAACI,UAAb,GAA0B,QAA1B;AAEAJ,YAAY,CAACK,cAAb,GAA8B,EAA9B;AAEA;AACA;AACA;;AACAL,YAAY,CAACM,SAAb,GAAyBC,MAAM,CAACC,MAAP,CAAcf,UAAU,CAACa,SAAzB,CAAzB;AACAN,YAAY,CAACM,SAAb,CAAuBG,WAAvB,GAAqCT,YAArC;AACAA,YAAY,CAACM,SAAb,CAAuBI,kBAAvB,GAA4ClB,mBAA5C;AAEA;AACA;AACA;;AAEAQ,YAAY,CAACW,cAAb,GAA8BC,CAAC,IAAI,CAAC,EAAEA,CAAC,IAAIA,CAAC,CAACC,MAAT,CAApC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAb,YAAY,CAACc,GAAb,GAAmBrB,UAAU,CAACqB,GAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAd,YAAY,CAACe,aAAb,GAA6BtB,UAAU,CAACsB,aAAxC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAf,YAAY,CAACM,SAAb,CAAuBS,aAAvB,GAAuC,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;EAC1D,IAAIxB,UAAU,CAACyB,MAAX,CAAkB,IAAlB,EAAwBF,KAAxB,EAA+BC,GAA/B,EAAoC,IAApC,CAAJ,EAA+C;IAC7C,OAAO,CAAC,CAACD,KAAT;EACD;;EACD,OAAO,KAAKP,WAAL,CAAiBE,cAAjB,CAAgCK,KAAhC,CAAP;AACD,CALD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAhB,YAAY,CAACM,SAAb,CAAuBa,IAAvB,GAA8B,UAASH,KAAT,EAAgBC,GAAhB,EAAqBG,IAArB,EAA2B;EACvD,IAAIC,GAAJ;;EACA,IAAI5B,UAAU,CAACyB,MAAX,CAAkB,IAAlB,EAAwBF,KAAxB,EAA+BC,GAA/B,EAAoCG,IAApC,CAAJ,EAA+C;IAC7C;IAEA,IAAIJ,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKM,SAAhC,EAA2C;MACzC,OAAON,KAAP;IACD,CAL4C,CAO7C;;;IACAjB,QAAQ,KAAKA,QAAQ,GAAGR,OAAO,CAAC,eAAD,CAAvB,CAAR;;IAEA,IAAIyB,KAAK,YAAYjB,QAArB,EAA+B;MAC7BiB,KAAK,CAACO,GAAN,CAAUC,YAAV,GAAyB,IAAzB;MACA,OAAOR,KAAP;IACD,CAb4C,CAe7C;;;IACA,IAAIS,MAAM,CAACC,QAAP,CAAgBV,KAAhB,CAAJ,EAA4B;MAC1B,OAAOA,KAAP;IACD,CAFD,MAEO,IAAI,CAACrB,KAAK,CAACgC,QAAN,CAAeX,KAAf,CAAL,EAA4B;MACjC,MAAM,IAAIlB,SAAJ,CAAc,QAAd,EAAwBkB,KAAxB,EAA+B,KAAKY,IAApC,EAA0C,IAA1C,EAAgD,IAAhD,CAAN;IACD,CApB4C,CAsB7C;IACA;IACA;;;IACA,MAAMA,IAAI,GAAGX,GAAG,CAACY,WAAJ,CAAgB,KAAKD,IAArB,CAAb;IACA,MAAME,KAAK,GAAGb,GAAG,CAACc,aAAJ,GAAoBd,GAAG,CAACc,aAAJ,EAApB,GAA0Cd,GAAxD;IACA,MAAMe,GAAG,GAAGF,KAAK,CAACG,SAAN,CAAgBL,IAAhB,EAAsB,IAAtB,CAAZ;IACAP,GAAG,GAAG,IAAIW,GAAG,CAAC9B,OAAJ,CAAYN,mBAAZ,CAAJ,CAAqCoB,KAArC,CAAN;IACAK,GAAG,CAACE,GAAJ,CAAQC,YAAR,GAAuB,IAAvB;IACA,OAAOH,GAAP;EACD,CAjCsD,CAmCvD;;;EACA,IAAIL,KAAK,IAAIA,KAAK,CAACkB,GAAnB,EAAwB;IACtBlB,KAAK,GAAGA,KAAK,CAACkB,GAAd;EACD;;EAED,IAAIlB,KAAK,IAAIA,KAAK,CAACmB,gBAAnB,EAAqC;IACnC,OAAOnB,KAAP;EACD;;EAED,IAAIS,MAAM,CAACC,QAAP,CAAgBV,KAAhB,CAAJ,EAA4B;IAC1B,IAAI,CAACA,KAAD,IAAU,CAACA,KAAK,CAACmB,gBAArB,EAAuC;MACrCnB,KAAK,GAAG,IAAI1B,cAAJ,CAAmB0B,KAAnB,EAA0B,CAAC,KAAKY,IAAN,EAAYX,GAAZ,CAA1B,CAAR;;MACA,IAAI,KAAKf,OAAL,CAAakC,OAAb,IAAwB,IAA5B,EAAkC;QAChCpB,KAAK,CAACqB,QAAN,GAAiB,KAAKnC,OAAL,CAAakC,OAA9B;MACD;IACF;;IACD,OAAOpB,KAAP;EACD;;EAED,IAAIA,KAAK,YAAYnB,MAArB,EAA6B;IAC3BwB,GAAG,GAAG,IAAI/B,cAAJ,CAAmB0B,KAAK,CAACA,KAAN,CAAY,IAAZ,CAAnB,EAAsC,CAAC,KAAKY,IAAN,EAAYX,GAAZ,CAAtC,CAAN;;IACA,IAAI,OAAOD,KAAK,CAACsB,QAAb,KAA0B,QAA9B,EAAwC;MACtC,MAAM,IAAIxC,SAAJ,CAAc,QAAd,EAAwBkB,KAAxB,EAA+B,KAAKY,IAApC,EAA0C,IAA1C,EAAgD,IAAhD,CAAN;IACD;;IACDP,GAAG,CAACgB,QAAJ,GAAerB,KAAK,CAACsB,QAArB;IACA,OAAOjB,GAAP;EACD;;EAED,IAAIL,KAAK,KAAK,IAAd,EAAoB;IAClB,OAAOA,KAAP;EACD;;EAGD,MAAMuB,IAAI,GAAG,OAAOvB,KAApB;;EACA,IACEuB,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,QAA9B,IAA0CC,KAAK,CAACC,OAAN,CAAczB,KAAd,CAA1C,IACCuB,IAAI,KAAK,QAAT,IAAqBvB,KAAK,CAACuB,IAAN,KAAe,QAApC,IAAgDC,KAAK,CAACC,OAAN,CAAczB,KAAK,CAAC0B,IAApB,CAFnD,CAE8E;EAF9E,EAGE;IACA,IAAIH,IAAI,KAAK,QAAb,EAAuB;MACrBvB,KAAK,GAAG,CAACA,KAAD,CAAR;IACD;;IACDK,GAAG,GAAG,IAAI/B,cAAJ,CAAmB0B,KAAnB,EAA0B,CAAC,KAAKY,IAAN,EAAYX,GAAZ,CAA1B,CAAN;;IACA,IAAI,KAAKf,OAAL,CAAakC,OAAb,IAAwB,IAA5B,EAAkC;MAChCf,GAAG,CAACgB,QAAJ,GAAe,KAAKnC,OAAL,CAAakC,OAA5B;IACD;;IACD,OAAOf,GAAP;EACD;;EAED,MAAM,IAAIvB,SAAJ,CAAc,QAAd,EAAwBkB,KAAxB,EAA+B,KAAKY,IAApC,EAA0C,IAA1C,EAAgD,IAAhD,CAAN;AACD,CApFD;AAsFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA5B,YAAY,CAACM,SAAb,CAAuB8B,OAAvB,GAAiC,UAASA,OAAT,EAAkB;EACjD,KAAKlC,OAAL,CAAakC,OAAb,GAAuBA,OAAvB;EACA,OAAO,IAAP;AACD,CAHD;AAKA;AACA;AACA;;;AACA,SAASO,YAAT,CAAsBC,GAAtB,EAA2B;EACzB,OAAO,KAAKC,YAAL,CAAkBD,GAAlB,CAAP;AACD;;AAED5C,YAAY,CAACM,SAAb,CAAuBwC,oBAAvB,GACInD,KAAK,CAACO,OAAN,CAAcT,UAAU,CAACa,SAAX,CAAqBwC,oBAAnC,EAAyD;EACvDC,aAAa,EAAErD,qBADwC;EAEvDsD,aAAa,EAAEtD,qBAFwC;EAGvDuD,WAAW,EAAEvD,qBAH0C;EAIvDwD,WAAW,EAAExD,qBAJ0C;EAKvDyD,GAAG,EAAER,YALkD;EAMvDS,IAAI,EAAET,YANiD;EAOvDU,GAAG,EAAEV,YAPkD;EAQvDW,IAAI,EAAEX;AARiD,CAAzD,CADJ;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA3C,YAAY,CAACM,SAAb,CAAuBuC,YAAvB,GAAsC,UAASU,YAAT,EAAuBX,GAAvB,EAA4B;EAChE,IAAIY,OAAJ;;EACA,IAAIC,SAAS,CAAC5C,MAAV,KAAqB,CAAzB,EAA4B;IAC1B2C,OAAO,GAAG,KAAKV,oBAAL,CAA0BS,YAA1B,CAAV;;IACA,IAAI,CAACC,OAAL,EAAc;MACZ,MAAM,IAAIE,KAAJ,CAAU,gBAAgBH,YAAhB,GAA+B,eAAzC,CAAN;IACD;;IACD,OAAOC,OAAO,CAACrD,IAAR,CAAa,IAAb,EAAmByC,GAAnB,CAAP;EACD;;EACDA,GAAG,GAAGW,YAAN;;EACA,MAAMI,MAAM,GAAG,KAAKC,aAAL,CAAmBhB,GAAnB,CAAf;;EACA,OAAOe,MAAM,GAAGA,MAAM,CAACE,QAAP,CAAgB;IAAEC,SAAS,EAAE,KAAb;IAAoBC,QAAQ,EAAE;EAA9B,CAAhB,CAAH,GAA4DJ,MAAzE;AACD,CAZD;AAcA;AACA;AACA;;;AAEAK,MAAM,CAACC,OAAP,GAAiBjE,YAAjB"},"metadata":{},"sourceType":"script"}