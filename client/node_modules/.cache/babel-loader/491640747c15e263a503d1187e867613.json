{"ast":null,"code":"'use strict';\n\nconst applyTimestampsToChildren = require('../update/applyTimestampsToChildren');\n\nconst applyTimestampsToUpdate = require('../update/applyTimestampsToUpdate');\n\nconst get = require('../get');\n\nconst handleTimestampOption = require('../schema/handleTimestampOption');\n\nconst symbols = require('../../schema/symbols');\n\nmodule.exports = function setupTimestamps(schema, timestamps) {\n  const childHasTimestamp = schema.childSchemas.find(withTimestamp);\n\n  function withTimestamp(s) {\n    const ts = s.schema.options.timestamps;\n    return !!ts;\n  }\n\n  if (!timestamps && !childHasTimestamp) {\n    return;\n  }\n\n  const createdAt = handleTimestampOption(timestamps, 'createdAt');\n  const updatedAt = handleTimestampOption(timestamps, 'updatedAt');\n  const currentTime = timestamps != null && timestamps.hasOwnProperty('currentTime') ? timestamps.currentTime : null;\n  const schemaAdditions = {};\n  schema.$timestamps = {\n    createdAt: createdAt,\n    updatedAt: updatedAt\n  };\n\n  if (updatedAt && !schema.paths[updatedAt]) {\n    schemaAdditions[updatedAt] = Date;\n  }\n\n  if (createdAt && !schema.paths[createdAt]) {\n    schemaAdditions[createdAt] = Date;\n  }\n\n  schema.add(schemaAdditions);\n  schema.pre('save', function (next) {\n    const timestampOption = get(this, '$__.saveOptions.timestamps');\n\n    if (timestampOption === false) {\n      return next();\n    }\n\n    const skipUpdatedAt = timestampOption != null && timestampOption.updatedAt === false;\n    const skipCreatedAt = timestampOption != null && timestampOption.createdAt === false;\n    const defaultTimestamp = currentTime != null ? currentTime() : (this.ownerDocument ? this.ownerDocument() : this).constructor.base.now();\n    const auto_id = this._id && this._id.auto;\n\n    if (!skipCreatedAt && createdAt && !this.get(createdAt) && this.isSelected(createdAt)) {\n      this.$set(createdAt, auto_id ? this._id.getTimestamp() : defaultTimestamp);\n    }\n\n    if (!skipUpdatedAt && updatedAt && (this.isNew || this.isModified())) {\n      let ts = defaultTimestamp;\n\n      if (this.isNew) {\n        if (createdAt != null) {\n          ts = this.$__getValue(createdAt);\n        } else if (auto_id) {\n          ts = this._id.getTimestamp();\n        }\n      }\n\n      this.$set(updatedAt, ts);\n    }\n\n    next();\n  });\n\n  schema.methods.initializeTimestamps = function () {\n    const ts = currentTime != null ? currentTime() : this.constructor.base.now();\n\n    if (createdAt && !this.get(createdAt)) {\n      this.$set(createdAt, ts);\n    }\n\n    if (updatedAt && !this.get(updatedAt)) {\n      this.$set(updatedAt, ts);\n    }\n\n    return this;\n  };\n\n  _setTimestampsOnUpdate[symbols.builtInMiddleware] = true;\n  const opts = {\n    query: true,\n    model: false\n  };\n  schema.pre('findOneAndUpdate', opts, _setTimestampsOnUpdate);\n  schema.pre('replaceOne', opts, _setTimestampsOnUpdate);\n  schema.pre('update', opts, _setTimestampsOnUpdate);\n  schema.pre('updateOne', opts, _setTimestampsOnUpdate);\n  schema.pre('updateMany', opts, _setTimestampsOnUpdate);\n\n  function _setTimestampsOnUpdate(next) {\n    const now = currentTime != null ? currentTime() : this.model.base.now();\n    applyTimestampsToUpdate(now, createdAt, updatedAt, this.getUpdate(), this.options, this.schema);\n    applyTimestampsToChildren(now, this.getUpdate(), this.model.schema);\n    next();\n  }\n};","map":{"version":3,"names":["applyTimestampsToChildren","require","applyTimestampsToUpdate","get","handleTimestampOption","symbols","module","exports","setupTimestamps","schema","timestamps","childHasTimestamp","childSchemas","find","withTimestamp","s","ts","options","createdAt","updatedAt","currentTime","hasOwnProperty","schemaAdditions","$timestamps","paths","Date","add","pre","next","timestampOption","skipUpdatedAt","skipCreatedAt","defaultTimestamp","ownerDocument","constructor","base","now","auto_id","_id","auto","isSelected","$set","getTimestamp","isNew","isModified","$__getValue","methods","initializeTimestamps","_setTimestampsOnUpdate","builtInMiddleware","opts","query","model","getUpdate"],"sources":["/Users/juliachu/Dropbox/CS/market/node_modules/mongoose/lib/helpers/timestamps/setupTimestamps.js"],"sourcesContent":["'use strict';\n\nconst applyTimestampsToChildren = require('../update/applyTimestampsToChildren');\nconst applyTimestampsToUpdate = require('../update/applyTimestampsToUpdate');\nconst get = require('../get');\nconst handleTimestampOption = require('../schema/handleTimestampOption');\nconst symbols = require('../../schema/symbols');\n\nmodule.exports = function setupTimestamps(schema, timestamps) {\n  const childHasTimestamp = schema.childSchemas.find(withTimestamp);\n\n  function withTimestamp(s) {\n    const ts = s.schema.options.timestamps;\n    return !!ts;\n  }\n\n  if (!timestamps && !childHasTimestamp) {\n    return;\n  }\n\n  const createdAt = handleTimestampOption(timestamps, 'createdAt');\n  const updatedAt = handleTimestampOption(timestamps, 'updatedAt');\n  const currentTime = timestamps != null && timestamps.hasOwnProperty('currentTime') ?\n    timestamps.currentTime :\n    null;\n  const schemaAdditions = {};\n\n  schema.$timestamps = { createdAt: createdAt, updatedAt: updatedAt };\n\n  if (updatedAt && !schema.paths[updatedAt]) {\n    schemaAdditions[updatedAt] = Date;\n  }\n\n  if (createdAt && !schema.paths[createdAt]) {\n    schemaAdditions[createdAt] = Date;\n  }\n\n  schema.add(schemaAdditions);\n\n  schema.pre('save', function(next) {\n    const timestampOption = get(this, '$__.saveOptions.timestamps');\n    if (timestampOption === false) {\n      return next();\n    }\n\n    const skipUpdatedAt = timestampOption != null && timestampOption.updatedAt === false;\n    const skipCreatedAt = timestampOption != null && timestampOption.createdAt === false;\n\n    const defaultTimestamp = currentTime != null ?\n      currentTime() :\n      (this.ownerDocument ? this.ownerDocument() : this).constructor.base.now();\n    const auto_id = this._id && this._id.auto;\n\n    if (!skipCreatedAt && createdAt && !this.get(createdAt) && this.isSelected(createdAt)) {\n      this.$set(createdAt, auto_id ? this._id.getTimestamp() : defaultTimestamp);\n    }\n\n    if (!skipUpdatedAt && updatedAt && (this.isNew || this.isModified())) {\n      let ts = defaultTimestamp;\n      if (this.isNew) {\n        if (createdAt != null) {\n          ts = this.$__getValue(createdAt);\n        } else if (auto_id) {\n          ts = this._id.getTimestamp();\n        }\n      }\n      this.$set(updatedAt, ts);\n    }\n\n    next();\n  });\n\n  schema.methods.initializeTimestamps = function() {\n    const ts = currentTime != null ?\n      currentTime() :\n      this.constructor.base.now();\n    if (createdAt && !this.get(createdAt)) {\n      this.$set(createdAt, ts);\n    }\n    if (updatedAt && !this.get(updatedAt)) {\n      this.$set(updatedAt, ts);\n    }\n    return this;\n  };\n\n  _setTimestampsOnUpdate[symbols.builtInMiddleware] = true;\n\n  const opts = { query: true, model: false };\n  schema.pre('findOneAndUpdate', opts, _setTimestampsOnUpdate);\n  schema.pre('replaceOne', opts, _setTimestampsOnUpdate);\n  schema.pre('update', opts, _setTimestampsOnUpdate);\n  schema.pre('updateOne', opts, _setTimestampsOnUpdate);\n  schema.pre('updateMany', opts, _setTimestampsOnUpdate);\n\n  function _setTimestampsOnUpdate(next) {\n    const now = currentTime != null ?\n      currentTime() :\n      this.model.base.now();\n    applyTimestampsToUpdate(now, createdAt, updatedAt, this.getUpdate(),\n      this.options, this.schema);\n    applyTimestampsToChildren(now, this.getUpdate(), this.model.schema);\n    next();\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}